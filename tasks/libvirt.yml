---

- name: Purge Libvirt output directory
  ansible.builtin.file:
    path: "{{ tf_config_dir }}"
    state: absent
  when:
    - tf_purge | bool

- name: Create Libvirt output directory
  ansible.builtin.file:
    path: "{{ tf_config_dir }}"
    state: directory
    mode: '0750'

- name: Create Libvirt private output directory
  ansible.builtin.file:
    path: "{{ tf_config_dir }}/private"
    state: directory
    mode: '0700'

- name: Deploy Libvirt private variables source templates
  ansible.builtin.template:
    src: "libvirt/variables.source.j2"
    dest: "{{ tf_config_dir }}/private/variables.source"
    mode: '0600'

- name: Deploy Libvirt general resources templates
  ansible.builtin.template:
    src: "libvirt/{{ item }}.tf.j2"
    dest: "{{ tf_config_dir }}/{{ item }}.tf"
    mode: '0640'
  with_items:
    - 'provider'
    - 'networks'
    - 'pools'
    - 'volumes'
    - 'cloud_init'

# Deploy the cloud_init.cfg, for details look at:
# https://cloudinit.readthedocs.io/en/latest/reference/examples.html
- name: Deploy Libvirt cloud_init.cfg file
  ansible.builtin.copy:
    content: |
      #cloud-config
      {{ item.cfg | to_nice_yaml(indent=2, width=9999) }}
    dest: "{{ tf_config_dir }}/cloud_init_{{ item.name }}.cfg"
    mode: '0640'
  with_items:
    - "{{ tf_libvirt_cloud_inits }}"

- name: Deploy Libvirt virtual machines specific templates
  ansible.builtin.include_tasks: libvirt-vms.yml
  with_items:
    - "{{ tf_libvirt_vms_groups }}"
  loop_control:
    loop_var: tf_group_name

# Generate the files_to_keep list
- name: Create the list of .tf and .cfg files to keep
  ansible.builtin.set_fact:
    files_to_keep: []

- name: Add to files to keep list fixed resources files
  ansible.builtin.set_fact:
     files_to_keep: "{{ files_to_keep + [ tf_config_dir + '/' + item + '.tf' ] }}"
  with_items:
    - 'provider'
    - 'networks'
    - 'pools'
    - 'volumes'
    - 'cloud_init'

- name: Add to files to keep list dynamic cloud_init.cfg files
  ansible.builtin.set_fact:
     files_to_keep: "{{ files_to_keep + [ tf_config_dir + '/cloud_init_' + item.name + '.cfg' ] }}"
  with_items:
    - "{{ tf_libvirt_cloud_inits }}"

- name: Add to files to keep list dynamic .vms.tf files
  ansible.builtin.set_fact:
    files_to_keep: "{{ files_to_keep + [ tf_config_dir + '/' + item + '.vms.tf' ] }}"
  with_items:
    - "{{ tf_libvirt_vms_groups }}"

- name: Get the stats (including absolute paths) of the remote files
  ansible.builtin.stat:
    path: "{{ item }}"
  loop: "{{ files_to_keep }}"
  register: files_to_keep_stats

- name: Create a list of files to keep with absolute paths
  set_fact:
    files_to_keep_full_path: "{{ files_to_keep_full_path | default([]) + [ item.stat.path ] }}"
  loop: "{{ files_to_keep_stats.results }}"

# Generate the list of all files
- name: Find all .tf and .cfg files in tf_config_dir
  find:
    paths: "{{ tf_config_dir }}"
    patterns: "*.tf,*.cfg"
  register: all_files

- name: Delete files not to keep
  file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ all_files.files }}"
  when: item.path not in files_to_keep_full_path

- name: Display a reminder for sourcing variables
  ansible.builtin.debug:
    msg:
      - "Remember to import the variable file in order to tell the tf cmd which"
      - "subscription use during the run. Before run the tf cmd, please execute:"
      - "    source {{ tf_config_dir }}/private/variables.source"
