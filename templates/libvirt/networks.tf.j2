# Subnet that will be created:
{% for network in tf_libvirt_networks %}
# {{ network.name }} {{ network.mode }} {% for address in network.addresses %}"{{ address }}"{%- if not loop.last -%}, {%- endif -%}{% endfor %}
{% endfor %}

{% for network in tf_libvirt_networks %}
resource "libvirt_network" "{{ network.name }}" {
    name      = "{{ network.name }}"
    mode      = "{{ network.mode }}"
    autostart = {{ network.autostart | default('true') | lower() }}
{% if network.domain is defined %}
    domain    = "{{ network.domain }}"
{% endif %}
    addresses = [{% for address in network.addresses %}"{{ address }}"{%- if not loop.last -%}, {%- endif -%}{% endfor %}]

    dhcp {
      enabled = {{ network.dhcp_enabled | default('true') | lower() }}
    }

{% if network.dns_enabled is defined and network.dns_enabled | bool %}
    dns {
      enabled = {{ network.dns_enabled | lower() }}
      local_only = {{ network.dns_local_only | default('false') | lower() }}

{% for forwarder in network.dns_forwarders %}
      forwarders {
        address = "{{ forwarder.address }}"
        domain = "{{ forwarder.domain }}"
      } 
{% endfor %}

{% if network.dns_host is defined %}
{% for host in network.dns_hosts %}
      hosts  {
        hostname = "{{ host.hostname }}"
        ip = "{{ host.ip }}"
      }
{% endfor %}
{% endif %}

{% if network.routes is defined %}
{% for route in network.routes %}
      routes {
        cidr = "{{ route.cidr }}"
        gateway = "{{ route.gateway }}"
      }
{% endfor %}
{% endif %}

    }
{% endif %}
}
{% endfor %}
